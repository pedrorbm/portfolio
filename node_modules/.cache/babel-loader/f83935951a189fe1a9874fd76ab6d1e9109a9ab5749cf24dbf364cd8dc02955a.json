{"ast":null,"code":"/**\n * React Router DOM v6.11.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, createRouter, createBrowserHistory, createHashHistory, ErrorResponse, UNSAFE_warning, UNSAFE_invariant, joinPaths } from '@remix-run/router';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n  return searchParams;\n}\nfunction getFormSubmissionInfo(target, options, basename) {\n  let method;\n  let action = null;\n  let encType;\n  let formData;\n  if (isFormElement(target)) {\n    let submissionTrigger = options.submissionTrigger;\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || null;\n    encType = options.encType || defaultEncType;\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData\n  };\n}\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n  _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\", \"preventScrollReset\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    history\n  } = _ref3;\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset\n    } = _ref4,\n    rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext); // Rendered into <a href> for absolute URLs\n\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to; // Only check for external origins client-side\n\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  } // Rendered into <a href> for relative URLs\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children\n    } = _ref5,\n    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset\n    } = _ref6,\n    props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      relative,\n      preventScrollReset\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmitImpl\"] = \"useSubmitImpl\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\nfunction useSubmitImpl(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n    let {\n      action,\n      method,\n      encType,\n      formData\n    } = getFormSubmissionInfo(target, options, basename); // Base options shared between fetch() and navigate()\n\n    let opts = {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      formMethod: method,\n      formEncType: encType\n    };\n    if (fetcherKey) {\n      !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n      router.fetch(fetcherKey, fetcherRouteId, action, opts);\n    } else {\n      router.navigate(action, _extends({}, opts, {\n        replace: options.replace,\n        fromRouteId: currentRouteId\n      }));\n    }\n  }, [router, basename, fetcherKey, fetcherRouteId, currentRouteId]);\n} // v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1); // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n\nfunction usePrompt(_ref8) {\n  let {\n    when,\n    message\n  } = _ref8;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"mappings":"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","names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","target","button","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","locationSearch","defaultSearchParams","searchParams","createSearchParams","has","getAll","forEach","append","getFormSubmissionInfo","options","basename","method","action","encType","formData","submissionTrigger","attr","getAttribute","stripBasename","FormData","name","type","form","Error","routes","opts","createRouter","future","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","mapRouteProperties","initialize","createHashHistory","state","_window","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","ErrorResponse","status","statusText","data","internal","error","message","stack","BrowserRouter","_ref","children","historyRef","React","useRef","current","v5Compat","setState","useState","location","useLayoutEffect","listen","Router","navigationType","navigator","HashRouter","_ref2","HistoryRouter","_ref3","process","displayName","isBrowser","document","createElement","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","ref","onClick","relative","reloadDocument","replace","to","preventScrollReset","rest","useContext","NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","e","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","useResolvedPath","useLocation","routerState","DataRouterStateContext","toPathname","encodeLocation","locationPathname","nextLocationPathname","navigation","isActive","charAt","length","isPending","ariaCurrent","undefined","filter","Boolean","join","Form","props","FormImpl","forwardedRef","onSubmit","fetcherKey","routeId","submit","useSubmitImpl","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref7","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","DataRouterContext","useDataRouterState","_temp","replaceProp","navigate","useNavigate","useCallback","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","useMemo","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","fetcherRouteId","router","UseSubmitImpl","currentRouteId","useRouteId","formEncType","fetch","fromRouteId","_temp2","routeContext","RouteContext","match","matches","slice","route","index","params","delete","toString","joinPaths","createFetcherForm","FetcherForm","fetcherId","useFetcher","UseFetcher","_route$matches","id","String","load","fetcher","getFetcher","fetcherWithComponents","useEffect","console","warn","deleteFetcher","useFetchers","UseFetchers","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp3","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","scrollIntoView","callback","capture","addEventListener","removeEventListener","usePrompt","_ref8","when","blocker","useBlocker","reset","proceed","confirm","setTimeout"],"sources":["/home/pedro/Documentos/portfolio/portfolio/node_modules/react-router-dom/dom.ts","/home/pedro/Documentos/portfolio/portfolio/node_modules/react-router-dom/index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  options: SubmitOptions,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string | null = null;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr =\n        target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || null;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<FutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(\n  fetcherKey?: string,\n  fetcherRouteId?: string\n): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { action, method, encType, formData } = getFormSubmissionInfo(\n        target,\n        options,\n        basename\n      );\n\n      // Base options shared between fetch() and navigate()\n      let opts = {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        formMethod: method as HTMLFormMethod,\n        formEncType: encType as FormEncType,\n      };\n\n      if (fetcherKey) {\n        invariant(\n          fetcherRouteId != null,\n          \"No routeId available for useFetcher()\"\n        );\n        router.fetch(fetcherKey, fetcherRouteId, action, opts);\n      } else {\n        router.navigate(action, {\n          ...opts,\n          replace: options.replace,\n          fromRouteId: currentRouteId,\n        });\n      }\n    },\n    [router, basename, fetcherKey, fetcherRouteId, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace/preventScrollReset because they are not\n    // navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"preventScrollReset\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}