{"ast":null,"code":"import _toConsumableArray from \"/home/pedro/Documentos/portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/pedro/Documentos/portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/pedro/Documentos/portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pedro/Documentos/portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pedro/Documentos/portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pedro/Documentos/portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * React Router v6.11.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nvar DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nvar AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\nvar NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nvar LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nvar RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nvar RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\n\nfunction useHref(to, _temp) {\n  var _ref9 = _temp === void 0 ? {} : _temp,\n    relative = _ref9.relative;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  var _React$useContext = React.useContext(NavigationContext),\n    basename = _React$useContext.basename,\n    navigator = _React$useContext.navigator;\n  var _useResolvedPath = useResolvedPath(to, {\n      relative: relative\n    }),\n    hash = _useResolvedPath.hash,\n    pathname = _useResolvedPath.pathname,\n    search = _useResolvedPath.search;\n  var joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search: search,\n    hash: hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  var _useLocation = useLocation(),\n    pathname = _useLocation.pathname;\n  return React.useMemo(function () {\n    return matchPath(pattern, pathname);\n  }, [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nvar navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\"; // Mute warnings for calls to useNavigate in SSR environments\n\nfunction useIsomorphicLayoutEffect(cb) {\n  var isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\n\nfunction useNavigate() {\n  var _React$useContext2 = React.useContext(RouteContext),\n    isDataRoute = _React$useContext2.isDataRoute; // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  var dataRouterContext = React.useContext(DataRouterContext);\n  var _React$useContext3 = React.useContext(NavigationContext),\n    basename = _React$useContext3.basename,\n    navigator = _React$useContext3.navigator;\n  var _React$useContext4 = React.useContext(RouteContext),\n    matches = _React$useContext4.matches;\n  var _useLocation2 = useLocation(),\n    locationPathname = _useLocation2.pathname;\n  var routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(function (match) {\n    return match.pathnameBase;\n  }));\n  var activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    activeRef.current = true;\n  });\n  var navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0; // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    var path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nvar OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\n\nfunction useOutlet(context) {\n  var outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\n\nfunction useParams() {\n  var _React$useContext5 = React.useContext(RouteContext),\n    matches = _React$useContext5.matches;\n  var routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\n\nfunction useResolvedPath(to, _temp2) {\n  var _ref10 = _temp2 === void 0 ? {} : _temp2,\n    relative = _ref10.relative;\n  var _React$useContext6 = React.useContext(RouteContext),\n    matches = _React$useContext6.matches;\n  var _useLocation3 = useLocation(),\n    locationPathname = _useLocation3.pathname;\n  var routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(function (match) {\n    return match.pathnameBase;\n  }));\n  return React.useMemo(function () {\n    return resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\");\n  }, [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\n\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n} // Internal implementation with accept optional param for RouterProvider usage\n\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  var _React$useContext7 = React.useContext(NavigationContext),\n    navigator = _React$useContext7.navigator;\n  var _React$useContext8 = React.useContext(RouteContext),\n    parentMatches = _React$useContext8.matches;\n  var routeMatch = parentMatches[parentMatches.length - 1];\n  var parentParams = routeMatch ? routeMatch.params : {};\n  var parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  var parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  var parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    var parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  var locationFromContext = useLocation();\n  var location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    var parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  var pathname = location.pathname || \"/\";\n  var remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  var matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  var renderedMatches = _renderMatches(matches && matches.map(function (match) {\n    return Object.assign({}, match, {\n      params: Object.assign({}, parentParams, match.params),\n      pathname: joinPaths([parentPathnameBase,\n      // Re-encode pathnames that were decoded inside matchRoutes\n      navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n      pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n      // Re-encode pathnames that were decoded inside matchRoutes\n      navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n    });\n  }), parentMatches, dataRouterState); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  var error = useRouteError();\n  var message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  var stack = error instanceof Error ? error.stack : null;\n  var lightgrey = \"rgba(200,200,200, 0.5)\";\n  var preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  var codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  var devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = /*#__PURE__*/function (_React$Component) {\n  _inherits(RenderErrorBoundary, _React$Component);\n  var _super = _createSuper(RenderErrorBoundary);\n  function RenderErrorBoundary(props) {\n    var _this;\n    _classCallCheck(this, RenderErrorBoundary);\n    _this = _super.call(this, props);\n    _this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n    return _this;\n  }\n  _createClass(RenderErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      console.error(\"React Router caught the following error during render\", error, errorInfo);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n        value: this.props.routeContext\n      }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n        value: this.state.error,\n        children: this.props.component\n      })) : this.props.children;\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError(error) {\n      return {\n        error: error\n      };\n    }\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      // When we get into an error state, the user will likely click \"back\" to the\n      // previous page that didn't have an error. Because this wraps the entire\n      // application, that will have no effect--the error page continues to display.\n      // This gives us a mechanism to recover from the error when the location changes.\n      //\n      // Whether we're in an error state or not, we update the location in state\n      // so that when we are in an error state, it gets reset when a new location\n      // comes in and the user recovers from the error.\n      if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n        return {\n          error: props.error,\n          location: props.location,\n          revalidation: props.revalidation\n        };\n      } // If we're not changing locations, preserve the location but still surface\n      // any new errors that may come through. We retain the existing error, we do\n      // this because the error provided from the app state may be cleared without\n      // the location changing.\n\n      return {\n        error: props.error || state.error,\n        location: state.location,\n        revalidation: props.revalidation || state.revalidation\n      };\n    }\n  }]);\n  return RenderErrorBoundary;\n}(React.Component);\nfunction RenderedRoute(_ref) {\n  var routeContext = _ref.routeContext,\n    match = _ref.match,\n    children = _ref.children;\n  var dataRouterContext = React.useContext(DataRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  var renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  var errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    var errorIndex = renderedMatches.findIndex(function (m) {\n      return m.route.id && (errors == null ? void 0 : errors[m.route.id]);\n    });\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  return renderedMatches.reduceRight(function (outlet, match, index) {\n    var error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    var errorElement = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    var matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    var getChildren = function getChildren() {\n      var children;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet: outlet,\n          matches: matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    }; // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches: matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  var ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  var state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  var route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n} // Internal version with hookName-aware debugging\n\nfunction useCurrentRouteId(hookName) {\n  var route = useRouteContext(hookName);\n  var thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n/**\n * Returns the ID for the nearest contextual route\n */\n\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\nfunction useNavigation() {\n  var state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\nfunction useRevalidator() {\n  var dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  var state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\nfunction useMatches() {\n  var _useDataRouterState = useDataRouterState(DataRouterStateHook.UseMatches),\n    matches = _useDataRouterState.matches,\n    loaderData = _useDataRouterState.loaderData;\n  return React.useMemo(function () {\n    return matches.map(function (match) {\n      var pathname = match.pathname,\n        params = match.params; // Note: This structure matches that created by createUseMatchesMatch\n      // in the @remix-run/router , so if you change this please also change\n      // that :)  Eventually we'll DRY this up\n\n      return {\n        id: match.route.id,\n        pathname: pathname,\n        params: params,\n        data: loaderData[match.route.id],\n        handle: match.route.handle\n      };\n    });\n  }, [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\nfunction useLoaderData() {\n  var state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  var routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\nfunction useRouteLoaderData(routeId) {\n  var state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\nfunction useActionData() {\n  var state = useDataRouterState(DataRouterStateHook.UseActionData);\n  var route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\n\nfunction useRouteError() {\n  var _state$errors;\n  var error = React.useContext(RouteErrorContext);\n  var state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  var routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError); // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  } // Otherwise look for errors from our data router state\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncValue() {\n  var value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncError() {\n  var value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nvar blockerId = 0;\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\n\nfunction useBlocker(shouldBlock) {\n  var _useDataRouterContext = useDataRouterContext(DataRouterHook.UseBlocker),\n    router = _useDataRouterContext.router;\n  var state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  var _React$useState = React.useState(function () {\n      return String(++blockerId);\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    blockerKey = _React$useState2[0];\n  var blockerFunction = React.useCallback(function (args) {\n    return typeof shouldBlock === \"function\" ? !!shouldBlock(args) : !!shouldBlock;\n  }, [shouldBlock]);\n  var blocker = router.getBlocker(blockerKey, blockerFunction); // Cleanup on unmount\n\n  React.useEffect(function () {\n    return function () {\n      return router.deleteBlocker(blockerKey);\n    };\n  }, [router, blockerKey]); // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n\n  return state.blockers.get(blockerKey) || blocker;\n}\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\n\nfunction useNavigateStable() {\n  var _useDataRouterContext2 = useDataRouterContext(DataRouterHook.UseNavigateStable),\n    router = _useDataRouterContext2.router;\n  var id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  var activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    activeRef.current = true;\n  });\n  var navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0; // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  var fallbackElement = _ref.fallbackElement,\n    router = _ref.router;\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  var _React$useState3 = React.useState(router.state),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    state = _React$useState4[0],\n    setState = _React$useState4[1];\n  React.useLayoutEffect(function () {\n    return router.subscribe(setState);\n  }, [router, setState]);\n  var navigator = React.useMemo(function () {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: function go(n) {\n        return router.navigate(n);\n      },\n      push: function push(to, state, opts) {\n        return router.navigate(to, {\n          state: state,\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n        });\n      },\n      replace: function replace(to, state, opts) {\n        return router.navigate(to, {\n          replace: true,\n          state: state,\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n        });\n      }\n    };\n  }, [router]);\n  var basename = router.basename || \"/\";\n  var dataRouterContext = React.useMemo(function () {\n    return {\n      router: router,\n      navigator: navigator,\n      static: false,\n      basename: basename\n    };\n  }, [router, navigator, basename]); // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: router.basename,\n    location: router.state.location,\n    navigationType: router.state.historyAction,\n    navigator: navigator\n  }, router.state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  var routes = _ref2.routes,\n    state = _ref2.state;\n  return useRoutesImpl(routes, undefined, state);\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  var basename = _ref3.basename,\n    children = _ref3.children,\n    initialEntries = _ref3.initialEntries,\n    initialIndex = _ref3.initialIndex;\n  var historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries: initialEntries,\n      initialIndex: initialIndex,\n      v5Compat: true\n    });\n  }\n  var history = historyRef.current;\n  var _React$useState5 = React.useState({\n      action: history.action,\n      location: history.location\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    state = _React$useState6[0],\n    setState = _React$useState6[1];\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  var to = _ref4.to,\n    replace = _ref4.replace,\n    state = _ref4.state,\n    relative = _ref4.relative;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  var _React$useContext9 = React.useContext(RouteContext),\n    matches = _React$useContext9.matches;\n  var _useLocation4 = useLocation(),\n    locationPathname = _useLocation4.pathname;\n  var navigate = useNavigate(); // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n\n  var path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(function (match) {\n    return match.pathnameBase;\n  }), locationPathname, relative === \"path\");\n  var jsonPath = JSON.stringify(path);\n  React.useEffect(function () {\n    return navigate(JSON.parse(jsonPath), {\n      replace: replace,\n      state: state,\n      relative: relative\n    });\n  }, [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false);\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  var _ref5$basename = _ref5.basename,\n    basenameProp = _ref5$basename === void 0 ? \"/\" : _ref5$basename,\n    _ref5$children = _ref5.children,\n    children = _ref5$children === void 0 ? null : _ref5$children,\n    locationProp = _ref5.location,\n    _ref5$navigationType = _ref5.navigationType,\n    navigationType = _ref5$navigationType === void 0 ? Action.Pop : _ref5$navigationType,\n    navigator = _ref5.navigator,\n    _ref5$static = _ref5.static,\n    staticProp = _ref5$static === void 0 ? false : _ref5$static;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  var basename = basenameProp.replace(/^\\/*/, \"/\");\n  var navigationContext = React.useMemo(function () {\n    return {\n      basename: basename,\n      navigator: navigator,\n      static: staticProp\n    };\n  }, [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  var _locationProp = locationProp,\n    _locationProp$pathnam = _locationProp.pathname,\n    pathname = _locationProp$pathnam === void 0 ? \"/\" : _locationProp$pathnam,\n    _locationProp$search = _locationProp.search,\n    search = _locationProp$search === void 0 ? \"\" : _locationProp$search,\n    _locationProp$hash = _locationProp.hash,\n    hash = _locationProp$hash === void 0 ? \"\" : _locationProp$hash,\n    _locationProp$state = _locationProp.state,\n    state = _locationProp$state === void 0 ? null : _locationProp$state,\n    _locationProp$key = _locationProp.key,\n    key = _locationProp$key === void 0 ? \"default\" : _locationProp$key;\n  var locationContext = React.useMemo(function () {\n    var trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search: search,\n        hash: hash,\n        state: state,\n        key: key\n      },\n      navigationType: navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  var children = _ref6.children,\n    location = _ref6.location;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  var children = _ref7.children,\n    errorElement = _ref7.errorElement,\n    resolve = _ref7.resolve;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\nvar neverSettledPromise = new Promise(function () {});\nvar AwaitErrorBoundary = /*#__PURE__*/function (_React$Component2) {\n  _inherits(AwaitErrorBoundary, _React$Component2);\n  var _super2 = _createSuper(AwaitErrorBoundary);\n  function AwaitErrorBoundary(props) {\n    var _this2;\n    _classCallCheck(this, AwaitErrorBoundary);\n    _this2 = _super2.call(this, props);\n    _this2.state = {\n      error: null\n    };\n    return _this2;\n  }\n  _createClass(AwaitErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      console.error(\"<Await> caught the following error during render\", error, errorInfo);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        children = _this$props.children,\n        errorElement = _this$props.errorElement,\n        resolve = _this$props.resolve;\n      var promise = null;\n      var status = AwaitRenderStatus.pending;\n      if (!(resolve instanceof Promise)) {\n        // Didn't get a promise - provide as a resolved promise\n        status = AwaitRenderStatus.success;\n        promise = Promise.resolve();\n        Object.defineProperty(promise, \"_tracked\", {\n          get: function get() {\n            return true;\n          }\n        });\n        Object.defineProperty(promise, \"_data\", {\n          get: function get() {\n            return resolve;\n          }\n        });\n      } else if (this.state.error) {\n        // Caught a render error, provide it as a rejected promise\n        status = AwaitRenderStatus.error;\n        var renderError = this.state.error;\n        promise = Promise.reject().catch(function () {}); // Avoid unhandled rejection warnings\n\n        Object.defineProperty(promise, \"_tracked\", {\n          get: function get() {\n            return true;\n          }\n        });\n        Object.defineProperty(promise, \"_error\", {\n          get: function get() {\n            return renderError;\n          }\n        });\n      } else if (resolve._tracked) {\n        // Already tracked promise - check contents\n        promise = resolve;\n        status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n      } else {\n        // Raw (untracked) promise - track it\n        status = AwaitRenderStatus.pending;\n        Object.defineProperty(resolve, \"_tracked\", {\n          get: function get() {\n            return true;\n          }\n        });\n        promise = resolve.then(function (data) {\n          return Object.defineProperty(resolve, \"_data\", {\n            get: function get() {\n              return data;\n            }\n          });\n        }, function (error) {\n          return Object.defineProperty(resolve, \"_error\", {\n            get: function get() {\n              return error;\n            }\n          });\n        });\n      }\n      if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n        // Freeze the UI by throwing a never resolved promise\n        throw neverSettledPromise;\n      }\n      if (status === AwaitRenderStatus.error && !errorElement) {\n        // No errorElement, throw to the nearest route-level error boundary\n        throw promise._error;\n      }\n      if (status === AwaitRenderStatus.error) {\n        // Render via our errorElement\n        return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n          value: promise,\n          children: errorElement\n        });\n      }\n      if (status === AwaitRenderStatus.success) {\n        // Render children with resolved value\n        return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n          value: promise,\n          children: children\n        });\n      } // Throw to the suspense boundary\n\n      throw promise;\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError(error) {\n      return {\n        error: error\n      };\n    }\n  }]);\n  return AwaitErrorBoundary;\n}(React.Component);\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait(_ref8) {\n  var children = _ref8.children;\n  var data = useAsyncValue();\n  var toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  var routes = [];\n  React.Children.forEach(children, function (element, index) {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    var treePath = [].concat(_toConsumableArray(parentPath), [index]);\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    var route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\nfunction mapRouteProperties(route) {\n  var updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes: routes,\n    mapRouteProperties: mapRouteProperties\n  }).initialize();\n} ///////////////////////////////////////////////////////////////////////////////\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };","map":{"version":3,"mappings":"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","names":["DataRouterContext","React","createContext","process","displayName","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","matches","isDataRoute","RouteErrorContext","useHref","to","_temp","relative","useInRouterContext","useContext","basename","navigator","useResolvedPath","hash","pathname","search","joinedPathname","joinPaths","createHref","useLocation","location","useNavigationType","navigationType","useMatch","pattern","useMemo","matchPath","navigateEffectWarning","useIsomorphicLayoutEffect","cb","isStatic","static","useLayoutEffect","useNavigate","useNavigateStable","useNavigateUnstable","dataRouterContext","locationPathname","routePathnamesJson","JSON","stringify","getPathContributingMatches","map","match","pathnameBase","activeRef","useRef","current","navigate","useCallback","options","go","path","resolveTo","parse","replace","push","state","OutletContext","useOutletContext","useOutlet","context","Provider","value","useParams","routeMatch","length","params","_temp2","useRoutes","routes","locationArg","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","route","parentPath","warningOnce","endsWith","locationFromContext","parsedLocationArg","parsePath","startsWith","remainingPathname","slice","matchRoutes","element","undefined","Component","renderedMatches","_renderMatches","Object","assign","encodeLocation","key","NavigationType","Pop","DefaultErrorComponent","error","useRouteError","message","isRouteErrorResponse","status","statusText","Error","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","console","style","fontStyle","defaultErrorElement","RenderErrorBoundary","constructor","props","revalidation","componentDidCatch","errorInfo","render","routeContext","children","component","RenderedRoute","_ref","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","id","_dataRouterState","errors","_dataRouterState2","errorIndex","findIndex","m","keys","join","Math","min","reduceRight","index","concat","getChildren","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","navigation","useRevalidator","UseRevalidator","revalidate","router","useMatches","UseMatches","loaderData","data","handle","useLoaderData","UseLoaderData","routeId","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","values","actionData","UseRouteError","useAsyncValue","_data","useAsyncError","_error","blockerId","useBlocker","shouldBlock","UseBlocker","useState","String","blockerKey","blockerFunction","args","blocker","getBlocker","useEffect","deleteBlocker","blockers","get","UseNavigateStable","fromRouteId","alreadyWarned","cond","RouterProvider","fallbackElement","setState","subscribe","n","opts","preventScrollReset","Router","historyAction","initialized","DataRoutes","_ref2","MemoryRouter","_ref3","initialEntries","initialIndex","historyRef","createMemoryHistory","v5Compat","history","action","listen","Navigate","_ref4","jsonPath","Outlet","Route","_props","invariant","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","stripBasename","Routes","_ref6","createRoutesFromChildren","Await","_ref7","resolve","AwaitErrorBoundary","AwaitRenderStatus","neverSettledPromise","Promise","promise","pending","success","defineProperty","renderError","reject","catch","_tracked","then","AbortedDeferredError","ResolveAwait","_ref8","toRender","Children","forEach","isValidElement","treePath","type","Fragment","apply","name","caseSensitive","loader","hasErrorBoundary","shouldRevalidate","lazy","renderMatches","mapRouteProperties","updates","createElement","createMemoryRouter","createRouter","future","v7_prependBasename","hydrationData","initialize"],"sources":["/home/pedro/Documentos/portfolio/portfolio/node_modules/react-router/lib/context.ts","/home/pedro/Documentos/portfolio/portfolio/node_modules/react-router/lib/hooks.tsx","/home/pedro/Documentos/portfolio/portfolio/node_modules/react-router/lib/components.tsx","/home/pedro/Documentos/portfolio/portfolio/node_modules/react-router/index.ts"],"sourcesContent":["import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setState] = React.useState(router.state);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={router.basename}\n            location={router.state.location}\n            navigationType={router.state.historyAction}\n            navigator={navigator}\n          >\n            {router.state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<FutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}